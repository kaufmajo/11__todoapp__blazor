@page "/todo"
@using TodoList.Model
@using TodoList.Services
@rendermode InteractiveServer
@inject TodoService TodoService

<PageTitle>Todo</PageTitle>

<h1>Todo (@todoItems.Count(item => !item.IsDone))</h1>

<div>
	@foreach (var item in todoItems)
	{
		<div class="d-flex justify-content-between mb-2">
			<div @key="item.Id">
				@* <input type="checkbox" @bind-value="item.IsDone" @bind-value:event="onchange" @oninput="() => UpdateTodoItem(item)" /> *@
				<input type="checkbox" @bind="item.IsDone" @bind:after="() => UpdateTodoItem(item)" />
				@item.Id - @item.Title
			</div>
			<div>
				<button class="btn btn-sm btn-primary" @onclick="() => DeleteTodoItem(item.Id)">Delete</button>
			</div>
		</div>
	}
</div>

<form method="post" @onsubmit="AddTodoItem" @formname="todolist-form1">
	<AntiforgeryToken />
	<div class="mb-3 row">
		<div class="col">
			<InputText @bind-Value="Model!.Title" />
		</div>
		<div class="col">
			<button type="submit" class="btn btn-primary">Add task (normal form)</button>
		</div>
	</div>
</form>

<EditForm EditContext="editContext" Model="Model" OnValidSubmit="AddTodoItem" FormName="todolist-form2" Enhance>
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="mb-3 row">
		<div class="col">
			<InputText @bind-Value="Model!.Title" />
			<ValidationMessage For="@(() => Model!.Title)" />
		</div>
		<div class="col">
			<button type="submit" class="btn btn-primary">Add task (build-in form)</button>
		</div>
	</div>
</EditForm>

<button class="btn btn-secondary" @onclick="ClearForm">Clear form</button>
<button class="btn btn-secondary" @onclick="@(() => Model = new())">Clear form</button>
<button class="btn btn-outline-secondary" @onclick="ResetId">Reset Title</button>
<button class="btn btn-outline-secondary" @onclick="@(() => Model!.Title = string.Empty)">Reset Title</button>

@code {
	private EditContext? editContext;

	[SupplyParameterFromForm]
	private TodoItem? Model { get; set; }

	protected override void OnInitialized() => Model ??= new();

	private void ClearForm() => Model = new();

	private void ResetId() => Model!.Title = string.Empty;
}
